/*******************************************************************************
 * Copyright (c) 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Amazon Software License (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 * http://aws.amazon.com/asl/
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 *******************************************************************************/
package com.amazonaws.services.cloudtrail.clientlibrary.model.internal;

import java.util.Date;
import java.util.List;
import java.util.UUID;


/**
 * The CloudTrail record contains information about requests for resources in your account what
 * service was accessed, what action was performed, and any parameters for the action. The request
 * also helps you determine who made the request. The event data is enclosed in a Records array.
 *
 * See{@link http://docs.aws.amazon.com/awscloudtrail/latest/userguide/event_reference_top_level.html}
 */
public class CloudTrailRecord extends CloudTrailDataStore{
    /**
     * Get event version.
     *
     * @return The version of the log event format. The current version is 1.02.
     */
    public String getEventVersion() {
        return (String) this.get(CloudTrailRecordField.eventVersion.name());
    }

    /**
     * Get UserIdentity object.
     *
     * See {@link http://docs.aws.amazon.com/awscloudtrail/latest/userguide/event_reference_user_identity.html}
     * @return Information about the user that made a request.
     */
    public UserIdentity getUserIdentity() {
        return (UserIdentity) this.get(CloudTrailRecordField.userIdentity.name());
    }

    /**
     * Get event timestamp.
     *
     * @return The date and time the request was made, in coordinated universal time (UTC).
     */
    public Date getEventTime() {
        return (Date) this.get(CloudTrailRecordField.eventTime.name());
    }

    /**
     * Get event name.
     *
     * @return The requested action, which is one of the actions listed in the API Reference for the service.
     */
    public String getEventName() {
        return (String) this.get(CloudTrailRecordField.eventName.name());
    }


    /**
     * Get event source.
     *
     * @return The service that the request was made to. For example, a call to Amazon EC2 is listed
     * in the eventSource field as ec2.amazonaws.com.
     */
    public String getEventSource() {
        return (String) this.get(CloudTrailRecordField.eventSource.name());
    }

    /**
     * Get AWS region.
     *
     * @return The AWS region that the request was made to.
     */
    public String getAwsRegion() {
        return (String) this.get(CloudTrailRecordField.awsRegion.name());
    }

    /**
     * Get event source IP address.
     *
     * @return The apparent IP address that the request was made from. For actions that originate
     * from the service console, the address reported is for the underlying customer resource,
     * not the console web server. For services in AWS, only the DNS name is displayed.
     */
    public String getSourceIPAddress() {
        return (String) this.get(CloudTrailRecordField.sourceIPAddress.name());
    }

    /**
     * Get event user agent.
     *
     * @return The agent through which the request was made, such as the AWS Management Console or
     * an AWS SDK.
     */
    public String getUserAgent() {
        return (String) this.get(CloudTrailRecordField.userAgent.name());
    }

    /**
     * Get request ID.
     *
     * @return GUID generated by the service being called to uniquely identify the request.
     */
    public UUID getRequestId() {
        return (UUID) this.get(CloudTrailRecordField.requestID.name());
    }

    /**
     * Get APIccall error code.
     *
     * @return The AWS service error if the request returns an error. Null if no error.
     */
    public String getErrorCode() {
        return (String) this.get(CloudTrailRecordField.errorCode.name());
    }

    /**
     * Get API call error message.
     *
     * @return If the request returns an error, the description of the error. This message includes messages
     * for authorization failures. For such messages, CloudTrail captures the message logged by the service
     * in its exception handling. Null if no error.
     */
    public String getErrorMessage() {
        return (String) this.get(CloudTrailRecordField.errorMessage.name());
    }

    /**
     * Get API call request parameters.
     *
     * @return The parameters, if any, that were sent with the request. These are fully documented in the
     * API Reference documentation for the appropriate AWS service.
     */
    public String getRequestParameters() {
        return (String) this.get(CloudTrailRecordField.requestParameters.name());
    }

    /**
     * Get API call response elements.
     *
     * @return The response element for actions that make changes (create, update, or delete actions).
     * If an action does not change state (for example, a request to get or list objects), this element
     * is omitted. These are fully documented in the API Reference documentation for the appropriate
     * AWS service.
     */
    public String getResponseElements() {
        return (String) this.get(CloudTrailRecordField.responseElements.name());
    }

    /**
     * Get additional data.
     *
     * @return Additional API call data set by AWS services.
     */
    public String getAdditionalEventData() {
        return (String) this.get(CloudTrailRecordField.additionalEventData.name());
    }

    /**
     * Get event ID
     *
     * @return GUID generated by CloudTrail to uniquely identify each event. You can use this value
     * to identify a single event. For example, you can use the ID as a primary key to retrieve log
     * data from a searchable database.
     */
    public UUID getEventId() {
        return (UUID) this.get(CloudTrailRecordField.eventID.name());
    }

    /**
     * Check whether the application is a read only operation.
     *
     * @return true indicate this operation is a read only operation.
     */
    public Boolean isReadOnly() {
        return (Boolean) this.get(CloudTrailRecordField.readOnly.name());
    }

    /**
     * Get the resources.
     *
     * @return A list of resources that is visited by this operation.
     */
    @SuppressWarnings("unchecked")
    public List<Resource> getResources() {
        return (List<Resource>) this.get(CloudTrailRecordField.resources.name());
    }

    /**
     * Get AWS account ID from UserIdentity.
     *
     * @return The account that owns the entity that granted permissions for the request.
     * If the request was made using temporary security credentials, this is the account
     * that owns the IAM user or role that was used to obtain credentials.
     */
    public String getAccountId() {
        return (String) this.get(CloudTrailRecordField.accountId.name());
    }

    /**
     * Get event type
     * @return Identifies the type of event that generated the event record.
     */
    public String getEventType() {
        return (String) this.get(CloudTrailRecordField.eventType.name());
    }

    /**
     * Get API version
     *
     * @return Identifies the API version number associated with the AwsApiCall eventType value.
     */
    public String getApiVersion() {
        return (String) this.get(CloudTrailRecordField.apiVersion.name());
    }

    /**
     * Get recipient account ID
     *
     * @return Represents the account ID that received this event. Currently (1.02) this will be the
     * same as the userIdentity Element accountId value.
     */
    public String getRecipientAccountId() {
        return (String) this.get(CloudTrailRecordField.recipientAccountId.name());
    }
}
